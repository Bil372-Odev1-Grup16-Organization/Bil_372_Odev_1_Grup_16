CREATE TABLE IF NOT EXISTS PRODUCT (
M_SYSCODE INT AUTO_INCREMENT PRIMARY KEY,
M_CODE  VARCHAR(15) NOT NULL,
M_NAME VARCHAR(30) NOT NULL,
M_SHORTNAME VARCHAR(10) ,
M_PARENTCODE VARCHAR(15) NOT NULL, 
M_ABSTRACT TINYINT(1) NOT NULL ,
M_CATEGORY VARCHAR (12) NOT NULL,
IS_ACTIVE TINYINT(1) NOT NULL DEFAULT 1,
UNIQUE (M_CODE)
);

CREATE TABLE IF NOT EXISTS FEATURES (
FEATURE_ID INT AUTO_INCREMENT PRIMARY KEY,
FEATURE_NAME VARCHAR(200) NOT NULL
);

CREATE TABLE IF NOT EXISTS PRODUCT_FEATURES (
M_SYSCODE INT NOT NULL,
FEATURE_ID INT NOT NULL,
MINVAL FLOAT,
MAXVAL FLOAT,
PRIMARY KEY (M_SYSCODE,FEATURE_ID),
FOREIGN KEY(M_SYSCODE) REFERENCES PRODUCT (M_SYSCODE),
FOREIGN KEY(FEATURE_ID) REFERENCES FEATURES (FEATURE_ID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS COUNTRY (
COUNTRY_CODE CHAR(3) PRIMARY KEY NOT NULL,
Country_Name VARCHAR(50) NOT NULL
);

CREATE TABLE IF NOT EXISTS COUNTRY_CITY (
CITY_ID INT AUTO_INCREMENT PRIMARY KEY,
CITY_NAME VARCHAR(100) NOT NULL,
COUNTRY_CODE CHAR(3) NOT NULL,
FOREIGN KEY (COUNTRY_CODE) REFERENCES COUNTRY (COUNTRY_CODE)
);



CREATE TABLE IF NOT EXISTS MANUFACTURERS (
MANUFACTURER_ID INT AUTO_INCREMENT PRIMARY KEY,
MANUFACTURER_NAME VARCHAR(200) NOT NULL,
MANUFACTURER_ADDRESS VARCHAR(200) NOT NULL,
CITY INT NOT NULL,
COUNTRY CHAR(3) NOT NULL,
FOREIGN KEY (CITY) REFERENCES COUNTRY_CITY (CITY_ID) ON DELETE CASCADE,
FOREIGN KEY (COUNTRY) REFERENCES COUNTRY (COUNTRY_CODE) ON DELETE CASCADE
);


CREATE TABLE IF NOT EXISTS PRODUCT_BRANDS (
BRAND_BARCODE CHAR(13) NOT NULL,
BRAND_NAME VARCHAR(100) NOT NULL,
MANUFACTURER_ID INT NOT NULL,
M_SYSCODE INT NOT NULL,
PRIMARY KEY (M_SYSCODE,BRAND_BARCODE),
KEY (BRAND_BARCODE), 
FOREIGN KEY (M_SYSCODE) REFERENCES PRODUCT (M_SYSCODE),
FOREIGN KEY (MANUFACTURER_ID) REFERENCES MANUFACTURERS (MANUFACTURER_ID) ON DELETE CASCADE
);


CREATE TABLE IF NOT EXISTS ORGANISATIONS (
ORG_ID INT AUTO_INCREMENT PRIMARY KEY ,
ORG_NAME VARCHAR(100) NOT NULL,
PARENT_ORG INT,
ORG_ABSTRACT TINYINT(1) NOT NULL,
ORG_ADDRESS VARCHAR(200) NOT NULL,
ORG_CITY INT NOT NULL, 
ORG_DISTRICT VARCHAR(50),
ORG_TYPE INT NOT NULL,
FOREIGN KEY (ORG_CITY) REFERENCES COUNTRY_CITY (CITY_ID) ON DELETE CASCADE
);



CREATE TABLE IF NOT EXISTS BRAND_ORGS(
    LOT_ID INT AUTO_INCREMENT,
    ORG_ID INT NOT NULL,
    BRAND_BARCODE CHAR(13) NOT NULL,
    EXPIRY_DATE DATE NOT NULL,
    BASE_PRICE FLOAT,
    PRIMARY KEY(LOT_ID,ORG_ID,BRAND_BARCODE,EXPIRY_DATE),
    IN_AMOUNT FLOAT NOT NULL,
    OUT_AMOUNT FLOAT NOT NULL,
    QUANTITY FLOAT AS (IN_AMOUNT + OUT_AMOUNT)
);

CREATE TABLE IF NOT EXISTS FLOW(
    SOURCE_LOT_ID INT NOT NULL,
    SOURCE_ORG_ID INT NOT NULL,
    TARGET_LOT_ID INT NOT NULL,
    TARGET_ORG_ID INT NOT NULL,
    BRAND_BARCODE CHAR(13) NOT NULL,
    QUANTITY FLOAT,
    FLOWDATE DATE,
    PRIMARY KEY (SOURCE_LOT_ID,Source_ORG_ID,TARGET_ORG_ID,TARGET_LOT_ID,BRAND_BARCODE),
    FOREIGN KEY (BRAND_BARCODE) REFERENCES PRODUCT_BRANDS (BRAND_BARCODE),
    FOREIGN KEY (SOURCE_LOT_ID) REFERENCES BRAND_ORGS (LOT_ID),
    FOREIGN KEY (TARGET_LOT_ID) REFERENCES BRAND_ORGS (LOT_ID),
    FOREIGN KEY (SOURCE_ORG_ID) REFERENCES ORGANISATIONS (ORG_ID),
    FOREIGN KEY (TARGET_ORG_ID) REFERENCES ORGANISATIONS (ORG_ID)
);

CREATE TABLE IF NOT EXISTS ALTERNATIVE_BRANDS(
    BRAND_BARCODE CHAR(13) NOT NULL,
    M_SYSCODE INT NOT NULL,
    ALTERNATIVE_BRAND_BARCODE CHAR(13) NOT NULL,
    ALTERNATIVE_M_SYSCODE INT NOT NULL,
    PRIMARY KEY (BRAND_BARCODE,M_SYSCODE,ALTERNATIVE_M_SYSCODE,ALTERNATIVE_BRAND_BARCODE),
    FOREIGN KEY (BRAND_BARCODE) REFERENCES PRODUCT_BRANDS (BRAND_BARCODE),
    FOREIGN KEY (ALTERNATIVE_BRAND_BARCODE) REFERENCES PRODUCT_BRANDS (BRAND_BARCODE),
    FOREIGN KEY (M_SYSCODE) REFERENCES PRODUCT (M_SYSCODE),
    FOREIGN KEY (ALTERNATIVE_M_SYSCODE) REFERENCES PRODUCT (M_SYSCODE)
    
);


CREATE TABLE IF NOT EXISTS ORG_OWNER (
ORG_NAME VARCHAR(100) NOT NULL PRIMARY KEY,
NAME VARCHAR(50) NOT NULL,
SURNAME VARCHAR(50) NOT NULL,
EMAIL VARCHAR(50) NOT NULL,
PHONE VARCHAR(50) NOT NULL,
FAX VARCHAR(50) NOT NULL,
ADRESS VARCHAR(50) NOT NULL
);

CREATE TABLE IF NOT EXISTS USERS (
USER_ID INT AUTO_INCREMENT  PRIMARY KEY,
NAME VARCHAR(50),
PASSWORD VARCHAR(50) NOT NULL,
USERNAME VARCHAR(50) NOT NULL
);

